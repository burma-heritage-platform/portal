# This workflow deploys your web app to Firebase Hosting on push or pull request to the 'main' branch.
# To learn more, see https://github.com/FirebaseExtended/action-hosting-deploy

name: Deploy to Firebase Hosting

# Controls when the workflow will run
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # This allows you to run the workflow manually from the Actions tab in GitHub
  workflow_dispatch:

# Define environment variables for the workflow, so you don't have to repeat them.
env:
  FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BURMA_HERITAGE_PLATFORM }}
  PROJECT_ID: burma-heritage-platform

jobs:
  build_and_deploy:
    # Set the runner environment
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js for potential future build processes
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Step 3: Install dependencies and build the project (uncomment if needed)
      # This step is commented out as your app appears to be a single HTML file.
      # If your project requires a build process (e.g., using React, Vue, etc.),
      # uncomment and customize this section.
      # - name: Install dependencies
      #   run: npm install
      #
      # - name: Build project
      #   run: npm run build

      # Step 4: Deploy the site to Firebase Hosting
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ env.FIREBASE_SERVICE_ACCOUNT }}
          projectId: ${{ env.PROJECT_ID }}
          channelId: live
          # The public directory is where your deployable files are located.
          # Change this if your build process outputs to a different folder.
          target: burma-heritage-platform
          publicDirectory: .
